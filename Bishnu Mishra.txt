                Om Sai Ram
           ----------------

DevOps :  Continous Delivery
 
     1. GIT          ------------------------------------ 
     2. Gradle       ------------------------------------
     3. Jenkins      ------------------------------------
     4. Puppet 
     5. Sonar 

Java   :  Dashboard

     1. Core Java    ------------------------------------ 
     2. Servlet 
     3. Jsp 
     4. Rest Webservice 
     5. Spring 

	 

Quant  :  Intermediate Level

     1. Manhattan Review
	 2. Veritas Review 
	 3. OG Practice
	 
	 
	 
	 
Personal Task  :  1.  Geojit Bank Statement and pan Card
                  2.  Net Bill Submit 
				  3.  TAX Return 
				  4.  Last Time TAX Check 
				  5.  Servicing Bike
		  
		  
AUGUST         :  1.  Quant - Veritas Question Bank
                  2.  Verbal - E-GMAT Review 
				             - Manhattan Review 
							 - RC CR SC Scholarnium 
							 - OG Practice 
				  3.  AWA    - Essay Practice
				  
September      :  1.  Quant  - Scholarnium
                  2.  Verbal - Scholarnium
				  3.  IR     - Manhattan 
				             - E-GMAT
			      4.  MOCK TEST 
				  
				  
				  
				  
				  
				  
				  
				  
				  
				  
				  
				  
				  
				  
				  
				  
				  
				  
				  
				  
				  
				  
				  
				  
				  
				  
				  
				  
				  
				  
				  
				  
				  
				  OM SHRI SAI RAM 
           -------------------------------	 
SYSTEM SETUP
------------		   
1.  Java Path Setting --------------------------- DONE 
2.  Maven Path Setting -------------------------- DONE 
3.  Gradle Path Setting ------------------------- DONE 
4.  Eclipse IDE Set Up -------------------------- DONE 
5.  Gradle Plugin Installation ------------------ DONE 
6.  Maven Plugin Installation ------------------- DONE http://download.eclipse.org/releases/indigo/  
7.  De Compiler in Eclipse ---------------------- DONE jadclipse ( jad.jar )
8.  SVN in Eclipse ------------------------------ DONE Subclipse
9.  GIT in Eclipse ------------------------------ DONE EGit vs JGit 
10. Run on Server in Eclipse 
11. Debug in Server in Eclipse 
12. JUnit Testing 
13. Maven Single Module Project
14. Maven Multi Module Project 
15. Gradle Single Module Project 
16. Gradle Multi Module Project 
17. Maven Run Eclipse 
18. Gradle Run Eclipse 
19. Spring Tool Suite Evaluate 
20. Maven , Gradle , Jad  , Junit in STS
21. How to set Java for eclipse in eclipse.ini -vm path of javaw.exe -------DONE

CORE JAVA  
---------

1.   Development     ------------------ DONE ( javac , java , -D -d -classpath ,optional arguments , System Properties , jar/ext/lib , jar , static import )
2.   Identifier      ------------------ ( Naming Rule - Legal Identifier , Java Naming Convention, Sun Java Standard )
3.   Assignment
4.   Operator
5.   Array
6.   String 
7.   Control Statement ---------------- DONE ( if , else , else if , switch , compile constant , while , do while ,Basic for , for each , break , continue , return  )
8.   Assertion 
9.   Class             ---------------- ( Declaring Class , Access & Non Access Modifier , )
10.  Inheritance       ----------------
11.  Abstract Class & Interface ------- ( Declaration , variable , methods )
12.  Polymorphism      ----------------
13.  Inner Class
14.  Exception handling ---------------
15.  Enum 
16.  Collection 
17.  Generic 
18.  Thread
19.  JDBC
20.  Design Pattern 


GIT 
---
1)   Git Integration with Eclipse
                - HOME User Variable 
                - Project Configuration > Team > GIT > Configuration user.name & user.email -> .GitConfig
				- Add a Project to GIT 
				- Ignore a file GitIgnore
				- Add to Index
				- Commit 
				- See in History and compare mode 
2)   Git - A Distributed Version Control System  ----------------------------------DONE
                - Centralized vs Distributed Version Control System 
				- GIT Features 
				      - Snapshots , not differences
					  - All operations are local
					  - Git has Integrity SHA-1 hash mechanism for checksum
					  - The Three States ( Modified , Staged , Committed )
				- Install git ( git for windows , github for windows , sudo yum install git-all)
				- git config --global user.name "misbish"
				- git config --list 
				- git config user.name 
				- git help config
				- git config --help
3)   Git Basics 
4)   Github 
        - Create an Account 
		- Generate ssh key with ssh-keygen and configure 
		- fork a Project 
		- Clone to Local ( git clone <gitUrl>)
		- Create a topic branch ( git checkout -b <customName> )
		- Make changes to some file ( git diff --word-diff )
		- Commit the changes ( git commit -a -m "message" )
		- Push to Project ( git push origin <customName> )
		- Create pull request 
		- Iterate Pull request and comments 


GRADLE 
------


JENKINS 
-------

1. Jenkins Version  ( 2.7 , 2.13 )
2. How to check Jenkins Version (Can check in manifest.mf)
3. Install Jenkins ( As a service or deploy in server )
4. Start/Stop Service ( Service Manager , Url /restart )
5. Inheriting Existing Data ( Copy data folder )
6. CJE Plugin ( CloudBees Jenkins Enterprise)
7. Default port and how to change ( 8080 , Jenkins.xml )
8. Jenkins Command Line Tool - jenkins-cli jar 

PUPPET 
------


SONAR 
-----










	 
	 
	 
	